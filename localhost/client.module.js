
import {
    f_add_css,
    f_s_css_prefixed,
    o_variables, 
    f_s_css_from_o_variables
} from "https://deno.land/x/f_add_css@1.1/mod.js"

import {
    f_o_html__and_make_renderable,
}
from 'https://deno.land/x/f_o_html_from_o_js@3.5/mod.js'


import {
    f_o_js as f_o_js__notifire,
    f_o_throw_notification,  
    f_clear_all_notifications,
    f_clear_o_notification,
    // s_css, 
    // O_notification
}
from 'https://deno.land/x/f_o_html_from_o_js@3.4/localhost/jsh_modules/notifire/mod.js'




import {
    f_n_idx_ensured_inside_array,
    f_swap_in_array,
    f_a_n_nor_channelcolorrgba_from_color_hex,
    f_s_color_hex_from_a_n_nor_channelcolorrgba, 
    f_o_webgl_program,
    f_delete_o_webgl_program,
    f_resize_canvas_from_o_webgl_program,
    f_render_from_o_webgl_program



} from "https://deno.land/x/handyhelpers@4.0.7/mod.js"

import { 
    O_fragrance, 
    O_component,
    O_scent,
    O_img_texture
 } from "./classes.module.js"
import * as o_mod_autogenerated from "../autogenerated.module.js"



let o_state__o_notifire = {}
document.body.appendChild(
    await f_o_html__and_make_renderable(
        {   
            a_o: [
                f_o_js__notifire(o_state__o_notifire)
            ]
        }
    )
)

o_variables.n_rem_font_size_base = 0.8 // adjust font size, other variables can also be adapted before adding the css to the dom
o_variables.n_rem_padding_interactive_elements = 0.5; // adjust padding for interactive elements 
f_add_css(
    `
    input[type="color"] {
        padding: 0.2rem;
    }
    .bgimg{
        aspect-ratio: 1.618;
        max-width: 10rem;
        width: 10rem;
        min-width: 10rem;
        background-position: center;
        background-size: cover;
        /* color: black; */
        /* outline: white; */
        -webkit-text-stroke-width: 1px;
        -webkit-text-stroke-color: black;
        color:white;
        font-size: 2rem;
        display:flex;
        justify-content:center;
        align-items:center;
    }
    .o_component{
        display:flex;
        flex-direction:row
        justify-content: space-around;
        align-items: center;
    }
    body{
        min-height: 100vh;
        min-width: 100vw;
        /* background: rgba(0,0,0,0.84);*/
        display:flex;
        justify-content:center;
    }
    #canvas_parent{
        flex:1;
        position:relative;
    }
    canvas{
        width: 100%;
        height: 100%;
        position: absolute;
        top:0;
        left: 0;
    }
    .app{
        width:100%;
        height: 100vh;
        display:flex;
        flex-direction: column;
        justify-content:flex-end;
    }
    .app > div{
        flex:1;
    }
    .viewselection,
    .a_o_scent,
    .o_fragrance{
        display:flex;
        flex:1;
    }
    ${
        f_s_css_from_o_variables(
            o_variables
        )
    }
    `

);

let o = await fetch("./funcions.glsl");
let s_functions_glsl = await o.text();

let f_update_shader_uniform_locations = function(){

    let o_gl = o_webgl_program.o_ctx;
    // Get the location of the uniform array

    // Create the array of vec4 data (flattened into a single Float32Array)
    let a_o_vec4__a_o_component = new Float32Array(
        o_state.o_fragrance.a_o_component.length*4
    );

    o_state.a_o_vec4_col_a_o_component = new Float32Array(
        o_state.o_fragrance.a_o_component.map(o=>{
            return o.o_scent.a_n_channel_rgba_color
        }).flat()
    );

    let n_nor = 0.;
    for(let n_idx_a_o_component in o_state.o_fragrance.a_o_component){
        let o_component = o_state.o_fragrance.a_o_component[n_idx_a_o_component];
        let n_nor_start = n_nor;
        n_nor+=o_component.n_nor;
        let n_nor_end = n_nor;

        a_o_vec4__a_o_component[n_idx_a_o_component*4+0] = n_nor_start;
        a_o_vec4__a_o_component[n_idx_a_o_component*4+1] = n_nor_end;
        // a_o_vec4__a_o_component[n_idx_a_o_component*4+2] = ;
        // a_o_vec4__a_o_component[n_idx_a_o_component*4+3] = ;
    }
    o_gl.uniform4fv(o_state.o_ufloc__a_o_component, a_o_vec4__a_o_component);
    o_gl.uniform4fv(o_state.o_ufloc__a_o_vec4_col_a_o_component, o_state.a_o_vec4_col_a_o_component);


    const o_ufloc__n_len_a_o_component = o_gl.getUniformLocation(o_webgl_program.o_shader__program, 'n_len_a_o_component');
    o_gl.uniform1f(o_ufloc__n_len_a_o_component, o_state.o_fragrance.a_o_component.length); // Replace 1.0 with the float value you want to pass

    f_resize();
}

let o_canvas = document.createElement('canvas');
let o_webgl_program = null;

function deleteWebGLProgram(gl, program) {
    // Get the attached shaders
    const attachedShaders = gl.getAttachedShaders(program);

    // Detach and delete each shader
    attachedShaders.forEach(shader => {
        gl.detachShader(program, shader);
        gl.deleteShader(shader);
    });

    // Delete the program
    gl.deleteProgram(program);
}

let f_update_shader = async function(){

    if(o_webgl_program){
        deleteWebGLProgram(o_webgl_program.o_ctx, o_webgl_program.o_shader__program)
    }
    let s_glsl_fragment = `#version 300 es
    precision mediump float;
    in vec2 ;
    out vec4 fragColor;
    uniform float n_ms_time;
    uniform vec2 o_scl_canvas;

    uniform float n_len_a_o_component;
    uniform vec4 a_o_component[${o_state.o_fragrance.a_o_component.length}];
    uniform vec4 a_o_vec4_col_a_o_component[${o_state.o_fragrance.a_o_component.length}];
    ${o_state.o_fragrance.a_o_component.map((o, n_idx)=>{
        return [
            `//${o.o_scent.a_s_url_img[0]}`,
            `uniform sampler2D o_texture_${n_idx};`

        ].join('\n')
    }).join('\n')}

    ${s_functions_glsl}

    void main() {
        float nt = n_ms_time *.001;
        float n_dimension_smaller_canvas = min(o_scl_canvas.y, o_scl_canvas.x);
        float n_dimension_bigger_canvas = max(o_scl_canvas.y, o_scl_canvas.x);
        float n_ratio_smaller_to_bigger = n_dimension_smaller_canvas/n_dimension_bigger_canvas;
        vec2 o_ratio_xy_canvas = vec2(1., o_scl_canvas.x/ o_scl_canvas.y);
        vec2 o_trn_nor_pixel = (gl_FragCoord.xy - o_scl_canvas.xy*.5) / vec2(n_dimension_smaller_canvas);
        vec2 o_trn_nor_from_zero = gl_FragCoord.xy / o_scl_canvas.xy;
        vec2 o_trn_nor_pixel2 = o_trn_nor_pixel+.5;
        o_trn_nor_pixel2.y = 1.-o_trn_nor_pixel2.y;
        float n_its = n_len_a_o_component;
        float n_tau = 6.2831;
        float n = 1.;
        float n_radius = 0.4;
        int n_idx_a_o_component = 0;
        vec4 o_col = vec4(0);
        float n_max = 0.;
        for(float n_it_nor = 0.; n_it_nor < 1.; n_it_nor +=(1./n_its)){
            
            vec4 o_component = a_o_component[n_idx_a_o_component];
            vec4 o_vec4_col_a_o_component = a_o_vec4_col_a_o_component[n_idx_a_o_component];

            float n_ang = n_tau * n_it_nor;
            float n_pizza_slice = f_n_pizza_slice(
                o_trn_nor_pixel,
                o_component[0],
                o_component[1],
                n_radius
            );
            float n2 = n_pizza_slice;
            float n_nor_ang_between = 
            
            min(
                o_component[0],
                o_component[1]
            )+
            (abs(
                o_component[0]
                -o_component[1]
            )/2.);
            n_nor_ang_between = 1.-n_nor_ang_between;
            vec2 o_segment_center = (vec2(
                sin(n_nor_ang_between*n_tau),
                cos(n_nor_ang_between*n_tau)
            )*(n_radius/2.)
            
            );
            float n_inside = smoothstep(0.41, 0.0,n2);
            n2 = pow(n2, 1./3.)*2.;
            n2 = clamp(n2, 0., 1.);
            //o_col += vec4(clamp(1.-pow(abs(length((o_trn_nor_pixel-o_segment_center)*(5.+n_it_nor*10.))-.5)*5., 1./12.)*1.2,0., 1.));
            //o_col += o_vec4_col_a_o_component*(1.-n2);
            ${o_state.o_fragrance.a_o_component.map((o,n_idx)=>{
                return `if(n_idx_a_o_component == ${n_idx}){
                    o_col += 
                    n_inside
                    *
                    texture(o_texture_${n_idx}, 
                        o_trn_nor_pixel2
                        +o_segment_center
                    );
                }`
            }).join('\n')}
            float n3 = n_pizza_slice;
            //n3 = abs(n3-.5);
            n3 = smoothstep(0.0, 0.2, n3);
            n3 = pow(n3, 1./5.)*1.1;
            o_col += vec4((1.-n3)*o_vec4_col_a_o_component);
            o_col = vec4(n_inside);
            break;
            n_idx_a_o_component+=1;

        }


        fragColor = vec4(o_col.rgb,1.);
        // vec4 o = texture(o_texture_2, o_trn_nor_pixel2);
        // fragColor = o;
    }
    `;
    // console.log(s_glsl_fragment)
    o_webgl_program = f_o_webgl_program(
        o_canvas, 
        `#version 300 es
        in vec4 a_o_vec_position_vertex;
        void main() {
            gl_Position = a_o_vec_position_vertex;
        }`,
        s_glsl_fragment
    )

    let o_gl = o_webgl_program?.o_ctx;
    o_state.o_ufloc__n_ms_time = o_webgl_program?.o_ctx.getUniformLocation(o_webgl_program?.o_shader__program, 'n_ms_time');
    o_webgl_program?.o_ctx.uniform1f(o_state.o_ufloc__n_ms_time, 0);
    o_state.o_ufloc__a_o_component = o_webgl_program?.o_ctx.getUniformLocation(o_webgl_program.o_shader__program, 'a_o_component');
    o_state.o_ufloc__a_o_vec4_col_a_o_component = o_webgl_program?.o_ctx.getUniformLocation(o_webgl_program.o_shader__program, 'a_o_vec4_col_a_o_component');

    f_update_shader_uniform_locations();

    function isPowerOf2(value) {
        return (value & (value - 1)) == 0;
    }

    o_state.a_o_img_texture = []
    for(let s_idx_a_o_component in o_state.o_fragrance.a_o_component){
        let n_idx_a_o_component = parseInt(s_idx_a_o_component);
        let o_component = o_state.o_fragrance.a_o_component[n_idx_a_o_component];
        let s = o_component.o_scent.a_s_url_img[0]
        
        let o_img_texture = await f_o_img_texture_from_s_url(s)
        
        o_state.a_o_img_texture[n_idx_a_o_component] = o_img_texture

        o_img_texture.o_texture = o_gl.createTexture();
        o_gl.bindTexture(o_gl.TEXTURE_2D, o_img_texture.o_texture);
        o_gl.texImage2D(o_gl.TEXTURE_2D, 0, o_gl.RGBA, o_gl.RGBA, o_gl.UNSIGNED_BYTE, o_img_texture.o_js_image_object);
        // Check if the image is a power of two in both dimensions.
        if (isPowerOf2(o_img_texture.o_js_image_object.width) && isPowerOf2(o_img_texture.o_js_image_object.height)) {
            // Yes, it's a power of two. Generate mips.
            o_gl.generateMipmap(o_gl.TEXTURE_2D);
        } else {
            // No, it's not a power of two. Turn off mips and set wrapping to clamp to edge
            o_gl.texParameteri(o_gl.TEXTURE_2D, o_gl.TEXTURE_WRAP_S, o_gl.CLAMP_TO_EDGE);
            o_gl.texParameteri(o_gl.TEXTURE_2D, o_gl.TEXTURE_WRAP_T, o_gl.CLAMP_TO_EDGE);
            o_gl.texParameteri(o_gl.TEXTURE_2D, o_gl.TEXTURE_MIN_FILTER, o_gl.LINEAR);
        }
        o_gl.bindTexture(o_gl.TEXTURE_2D, null);  // Unbind the texture
           
    }

}




// Determine the current domain
const s_hostname = window.location.hostname;

// // Create the WebSocket URL, assuming ws for http and wss for https
// const s_protocol_ws = window.location.protocol === 'https:' ? 'wss:' : 'ws:';
// const s_url_ws = `${s_protocol_ws}//${s_hostname}:${window.location.port}`;

// // Create a new WebSocket instance
// const o_ws = new WebSocket(s_url_ws);

// // Set up event listeners for your WebSocket
// o_ws.onopen = function(o_e) {
//     console.log({
//         o_e, 
//         s: 'o_ws.onopen called'
//     })
// };

// o_ws.onerror = function(o_e) {
//     console.log({
//         o_e, 
//         s: 'o_ws.onerror called'
//     })
// };

// o_ws.onmessage = function(o_e) {
//     console.log({
//         o_e, 
//         s: 'o_ws.onmessage called'
//     })
//     o_state.a_o_msg.push(o_e.data);
//     o_state?.o_js__a_o_mod?._f_render();

// };
// window.addEventListener('pointerdown', (o_e)=>{
//     o_ws.send('pointerdown on client')
// })
// To close the WebSocket
// o_ws.close();


let f_timeouttry_update_server_data = async function(){
    clearTimeout(o_state.n_id_timeout_update_server_data);
    o_state.n_id_timeout_update_server_data = setTimeout(()=>{
        Promise.all(
            [
                ...[
                    'a_o_fragrance', 
                    'a_o_scent', 
                ].map(async s=>{
            
                    let o = await fetch(
                        '/', 
                        {
                            method:"POST",
                            body: JSON.stringify(
                                {
                                    s_name_function: "writeTextFile", 
                                    a_v_param: [
                                        `./${s}.json`, 
                                        JSON.stringify(o_state[s], null, 4)
                                    ]
                                }, 
                                null, 
                                4
                            )
                        }
                    )
                    return o.json();
            
                }), 
                (async ()=>{
                    let o = await fetch(
                        '/', 
                        {
                            method:"POST",
                            body: JSON.stringify(
                                {
                                    s_name_function: "f_update_autogenerated", 
                                    a_v_param:[]
                                }, 
                                null, 
                                4
                            )
                        }
                    )
                    return o.json();
                })()
            ]
        );
    }, 1000)
    return true;
}

let o_state = {
    a_o_img_texture: [],
    o_ufloc__n_ms_time: null, 
    n_ms_time: 0,
    o_ufloc__a_o_component: null,
    a_o_vec4__a_o_component: new Float32Array(), 
    o_ufloc__a_o_vec4_col_a_o_component: null,
    a_o_vec4_col_a_o_component: new Float32Array(),
    b_display_a_o_scent: false,
    a_o_img: [],
    o_state__o_notifire,
    n_grams_per_ml_ethanol: .783,
    n_ml_target_liquid: 40,
    n_id_timeout_tmp: 0,
    n_id_timeout_update_server_data: 0, 
    s_git_commit: (await((
        await fetch(
            '/', 
            {
                method:"POST",
                body: JSON.stringify(
                    {
                        s_name_function: "f_o_command", 
                        a_v_param: [
                            // 'echo test',
                            'git rev-parse HEAD'
                        ]
                    }, 
                    null, 
                    4
                )
            }
        )
    ).json()))?.v_return?.s_stdout.trim(),

    a_o_fragrance: o_mod_autogenerated.a_o_fragrance,
    a_o_scent: o_mod_autogenerated.a_o_scent,
    a_o_component: [],
    o_scent: {}, 
    o_fragrance: {},
    o_component: {}, 

}

// update the references
for(let o_fragrance of o_state.a_o_fragrance){
    o_fragrance.a_o_component.map(o=>{
        o.o_scent = o_state.a_o_scent.find(o2=>{
            return o2.s_name == o.o_scent.s_name
        })
    })
}

let n_id_raf = 0;
let f_raf = function(){
    o_state.n_ms_time = window.performance.now();
    n_id_raf = window.requestAnimationFrame(f_raf);
    // console.log(o_webgl_program)
    if(o_webgl_program){
        let o_gl = o_webgl_program?.o_ctx 

        o_gl.uniform1f(o_state.o_ufloc__n_ms_time, o_state.n_ms_time);
        


        for(let s_idx in o_state.a_o_img_texture){

            let n_idx = parseInt(s_idx);
            let o_img_texture = o_state.a_o_img_texture[n_idx];

            o_gl.activeTexture(o_gl.TEXTURE0+n_idx);
            o_gl.bindTexture(o_gl.TEXTURE_2D, o_img_texture.o_texture);
            const o_uloc_o_texture_1 = o_gl.getUniformLocation(o_webgl_program?.o_shader__program, `o_texture_${n_idx}`);
            o_gl.uniform1i(o_uloc_o_texture_1, n_idx);  
               
        }
        
        f_render_from_o_webgl_program(o_webgl_program);
    }

}
n_id_raf = window.requestAnimationFrame(f_raf);

let f_resize = ()=>{
    if(o_webgl_program){
        f_resize_canvas_from_o_webgl_program(
            o_webgl_program, 
            o_canvas.parentElement?.clientWidth,
            o_canvas.parentElement?.clientHeight
        )
    }
}
window.addEventListener('resize',()=>{
    f_resize()
});
f_resize()



let f_o_img_texture_from_s_url = async function(
    s_url, 
    b_force_update
){
    // images are cached by the browser anyways...
    
    return new Promise((f_res, f_rej)=>{
        const o_js_image_object = new Image();
        o_js_image_object.crossOrigin = "anonymous"; // This is important if the image is hosted on a different domain
        o_js_image_object.onload = function() {
            let o = new O_img_texture(
                s_url, 
                o_js_image_object
            );
            return f_res(o)
        };
        o_js_image_object.onerror = (o_err)=>{return f_rej(o_err)}
        o_js_image_object.src = s_url
    })

}
let f_update_a_o_img = async function(){
     let a = o_state.a_o_scent.map(o_scent=>{
        let o = o_scent.a_s_url_img.map(s=>{
            return f_o_img_texture_from_s_url(s);
        });
        // console.log(o)
        return o
    }).flat()
    // console.log(a);

    return Promise.all(a)
}
window.o_state = o_state
await f_update_a_o_img();


// //readme.md:start
document.body.appendChild(
    await f_o_html__and_make_renderable(
        {
            s_tag: 'div', 
            class: "app",
            a_o: [
                Object.assign(
                    o_state, 
                    {
                        o_js__viewselection: {
                            f_o_jsh: ()=>{
                                return {
                                    class: "viewselection",
                                    a_o: [
                                        {
                                            s_tag: 'button', 
                                            innerText: "fragrance", 
                                            onpointerdown: async ()=>{
                                                o_state.b_display_a_o_scent = false;
                                                await o_state.o_js__viewselection._f_render();
                                            }
                                        },
                                        {
                                            s_tag: 'button', 
                                            innerText: "scent", 
                                            onpointerdown: async ()=>{
                                                o_state.b_display_a_o_scent = true;
                                                await o_state.o_js__viewselection._f_render();
                                            }
                                        },
                                        {

                                            b_render: o_state.b_display_a_o_scent,
                                            class: "a_o_scent", 
                                            a_o: [
                                                o_state.a_o_scent.map(o_scent=>{
                                                    return {
                                                        class: "o_scent", 
                                                        style: [
                                                            'display:flex'
                                                        ].join(';'),
                                                        a_o: [
                                                            {
                                                                s_tag: 'input', 
                                                                value: o_scent.s_name, 
                                                                oninput: (o_e)=>{
                                                                    o_scent.s_name = o_e.target.value();
                                                                }
                                                            }, 
                                                            {
                                                                s_tag: 'input', 
                                                                value: o_scent.s_desc, 
                                                                oninput: (o_e)=>{
                                                                    o_scent.s_name = o_e.target.value();
                                                                }
                                                            },
                                                            // s_name
                                                            // s_desc
                                                            // a_s_url_img
                                                            // n_gram_per_ml
                                                            // a_n_channel_rgba_color 
                                                            {
                                                                s_tag: 'input', 
                                                                type: "color", 
                                                                value: f_s_color_hex_from_a_n_nor_channelcolorrgba(
                                                                    o_scent.a_n_channel_rgba_color
                                                                ),
                                                                oninput: (o_e)=>{
                                                                    o_scent.a_n_channel_rgba_color = f_a_n_nor_channelcolorrgba_from_color_hex(
                                                                        o_e.target.value
                                                                    );
                                                                    console.log(o_scent.a_n_channel_rgba_color)
                                                                    f_timeouttry_update_server_data()

                                                                }
                                                            },
                                                            {
                                                                a_o: [
                                                                    o_scent.a_s_url_img.map((s_url_img, n_idx_a_s_url_img) =>{
                                                                        return {
                                                                            a_o: [
                                                                                {
                                                                                    f_o_jsh:()=>{
                                                                                        return {
                                                                                            s_tag: "input", 
                                                                                            value: s_url_img,
                                                                                            oninput: async (o_e, o2)=>{
                                                                                                let s = o_e.target.value
                                                                                                try {
                                                                                                    let o_url = new URL(s);
                                                                                                    o_scent.a_s_url_img[n_idx_a_s_url_img] = s
                                                                                                    await o2._f_update();
                                                                                                    return true;
                                                                                                } catch (e) {
                                                                                                    console.log(o2)
                                                                                                    console.log(e)
                                                                                                    f_o_throw_notification(o_state.o_state__o_notifire,`"${s}" is not a valid url`, 'error')
                                                                                                    return false;
                                                                                                }
                                                                                            },
                                                                                            style:[
                                                                                                `background-position:center`,
                                                                                                `background-size: cover`,
                                                                                                `background-image:url(${s_url_img})`
                                                                                            ].join(';')
                                                                                        }
                                                                                    }
                                                                                }, 
                                                                                {
                                                                                    s_tag: "button", 
                                                                                    innerText: "remove", 
                                                                                    onpointerdown: ()=>{
                                                                                        o_scent.a_s_url_img = o_scent.a_s_url_img.filter(s=>{
                                                                                            return s!=s_url_img
                                                                                        });
                                                                                    }
                                                                                }
                                                                            ]
                                                                            
                                                                        }
                                                                    }), 
                                                                    {
                                                                        s_tag: "button", 
                                                                        innerText: "add url", 
                                                                        onclick: async ()=>{
                                                                            o_scent.a_s_url_img.push('url_here')
                                                                            o_state.o_js__viewselection._f_render();
                                                                        }
                                                                    }
                                                                ]
                                                            },
                                                            {
                                                                s_tag: 'input', 
                                                                innerText: o_scent.a, 
                                                                oninput: (o_e)=>{
                                                                    o_scent.s_name = o_e.target.value();
                                                                }
                                                            }
                                                        ]
                                                    }
                                                })
                                            ]
                                        },
                                        {
                                            b_render: !o_state.b_display_a_o_scent,
                                            class: "o_fragrance", 
                                            style: 'display:flex;flex-direction:column',
                                            a_o: [
                                                Object.assign(
                                                    o_state, 
                                                    {
                                                        o_js__nr: {
                                                            f_o_jsh: ()=>{
                                                                return {
                                                                    class: "top",
                                                                    a_o: [
                                                                        {
                                                                            s_tag: "h1",
                                                                            innerText: "NR." 
                                                                        },
                                                                        {
                                                                            s_tag: "input", 
                                                                            type:"number",
                                                                            value: o_state?.o_fragrance?.n_id, 
                                                                            oninput: async (o_e)=>{
                                                                                let n_id = parseInt(o_e.target.value)
                                                                                if(n_id <=1 || isNaN(n_id)){
                                                                                    await f_o_throw_notification(o_state__o_notifire, 'number must be >=1', 'warning');
                                
                                                                                    return 
                                                                                }
                                                                                let o_fragrance_existing = o_state.a_o_fragrance.find(
                                                                                    o=>{
                                                                                        return o.n_id == n_id
                                                                                    }
                                                                                );
                                                                                if(!o_fragrance_existing){
                                                                                    o_fragrance_existing = new O_fragrance(
                                                                                        n_id, 
                                                                                        [
                                                                                            new O_component(
                                                                                                o_mod_autogenerated.o_scent__bergamottenminze, 
                                                                                                1.0
                                                                                            )
                                                                                        ], 
                                                                                        0.8
                                                                                    )
                                                                                    o_state.a_o_fragrance.push(o_fragrance_existing)
                                                                                }
                                                                                o_state.o_fragrance = o_fragrance_existing
                                                                                await f_update_shader();
                                                                                await o_state.o_js__a_o_component._f_render();
                                                                            }
                                                                        }
                                                                    ]
                                                                }
                                                            }
                                                        }
                                                    }
                                                ).o_js__nr,
                                                {

                                                    style: [
                                                        "display:flex", 
                                                        'flex:1'
                                                    ].join(';\n'),
                                                    a_o: [
                                                        Object.assign(
                                                            o_state, 
                                                            {
                                                                o_js__a_o_component: {
                                                                    f_o_jsh: ()=>{
                                                                        return {
                                                                            class: "a_o_component",
                                                                            a_o: [
                                                                                ...(o_state?.o_fragrance?.a_o_component?.map?.((o_component, n_idx_a_o_component)=>{
                                                                                    return {
                                                                                        class: 'o_component',
                                                                                        style: [
                                                                                            `background-image:url(${o_component.o_scent.a_s_url_img?.[0]})`
                                                                                        ].join(';'),
                                                                                        a_o: [
                                                                                            Object.assign(
                                                                                                o_component, 
                                                                                                {
                                                                                                    _o_js: {
                                                                                                        f_o_jsh:async ()=>{
                                                                                                            await Promise.all([
                                                                                                                f_timeouttry_update_server_data(),
                                                                                                            ])
                                                    
                                                                                                            return {
                                                                                                                s_tag: "input", 
                                                                                                                type: "number",
                                                                                                                min: 1, 
                                                                                                                max: 99,
                                                                                                                step: 1,
                                                                                                                value: parseFloat(o_component.n_nor * 100).toFixed(2), 
                                                                                                                oninput: async (o_e)=>{
                                                                                                                    console.log(o_e.target.value)
                                                                                                                    clearTimeout(o_state.n_id_timeout_tmp);
                                                                                                                    o_state.n_id_timeout_tmp = setTimeout(async ()=>{
                                
                                                                                                                            let n_nor = parseFloat(o_e.target.value)/100;
                                                                                                                            if(n_nor <=0 || isNaN(n_nor)){
                                                                                                                                return
                                                                                                                            }
                                                                                                                            if(o_state.o_fragrance.a_o_component.length == 1){
                                                                                                                                o_component.n_nor = 1
                                                                                                                                return
                                                                                                                            }
                                                                                                                            let o_component_next = o_state.o_fragrance.a_o_component[f_n_idx_ensured_inside_array(
                                                                                                                                n_idx_a_o_component+1, 
                                                                                                                                o_state.o_fragrance.a_o_component.length
                                                                                                                            )]
                                                                                                                            let n_nor_left = (o_component.n_nor+o_component_next.n_nor)-n_nor;
                                                                                                                            if(n_nor_left <=0){
                                                                                                                                return 
                                                                                                                            }
                                                                                                                            // let n_nor_left = o_state?.o_fragrance?.a_o_component
                                                                                                                            //                     .filter(o=>o!=o_component)
                                                                                                                            //                     .reduce((n_acc, o)=>{return n_acc+o.n_nor}, 0)
                                                                                                                            //                     -n_nor;
                                                                                                                            o_component.n_nor = n_nor;
                                                                                                                            o_component_next.n_nor = n_nor_left
                                                                                                                            await Promise.all(
                                                                                                                                o_state?.o_fragrance?.a_o_component.map(o=>{
                                                                                                                                    if(o!= o_component){
                                                                                                                                        return o._o_js._f_render()
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            )
                                
                                                                                                                            );
                                                                                                                            f_update_shader_uniform_locations()
                                                                                                                            
                                                                                                                    },10);
                                
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            )._o_js,
                                                                                            
                                                                                            {
                                                                                                innerText: `%`
                                                                                            },
                                                                                            {
                                                                                                s_tag: 'input', 
                                                                                                type: 'readonly', 
                                                                                                value: ((1.-o_state.o_fragrance.n_nor_ethanol)*o_state.n_ml_target_liquid * o_component.n_nor*o_component.o_scent.n_gram_per_ml).toFixed(2)
                                                                                            },
                                                                                            {
                                                                                                innerText: `gram`
                                                                                                // `${
                                                                                                //     (1.-o_state.o_fragrance.n_nor_ethanol)*o_state.n_ml_target_liquid * o_component.n_nor
                                                                                                // } grams`
                                                                                            },
                                                                                            {
                                                                                                s_tag: "select", 
                                                                                                onchange: async (o_e)=>{
                                                                                                    let o_scent = o_state.a_o_scent.find(o=>{
                                                                                                        return o.s_name == o_e.target.value
                                                                                                    });
                                                                                                    if(o_scent){
                                                                                                        o_component.o_scent = o_scent 
                                                                                                        await o_state.o_js__a_o_component._f_render();
                                                                                                        await f_update_shader();
                                                                                                    }
                                                                                                },
                                                                                                a_o: [
                                                                                                    ...o_state.a_o_scent.map(o_scent=>{
                                
                                                                                                        return {
                                                                                                            s_tag: "option", 
                                                                                                            innerText: o_scent.s_name,
                                                                                                            value: o_scent.s_name,
                                                                                                            ...((o_scent.s_name == o_component.o_scent.s_name) ? {
                                                                                                                selected: true
                                                                                                            }: {})
                                                                                                        }
                                                                                                    })
                                                                                                ]
                                                                                            },
                                                                                            // {
                                                                                            //     class: "bgimg",
                                                                                            //     innerText: o_component.o_scent.s_desc,
                                                                                            //     style: [
                                                                                            //         `background-image:url(${o_component.o_scent.a_s_url_img?.[0]})`
                                                                                            //     ].join(';')
                                                                                            // },
                                                                                            {
                                                                                                style: "display:flex;flex-direction:column",
                                                                                                a_o: [
                                                                                                    
                                                                                                    {
                                                                                                        s_tag: "button", 
                                                                                                        class: "icon-arrow-up", 
                                                                                                        onpointerdown: async ()=>{
                                                                                                            let n_idx_new = f_n_idx_ensured_inside_array(
                                                                                                                n_idx_a_o_component-1, 
                                                                                                                o_state.o_fragrance.a_o_component.length
                                                                                                            );
                                                                                                            f_swap_in_array(o_state.o_fragrance.a_o_component, n_idx_a_o_component, n_idx_new)
                                                                                                            await o_state.o_js__a_o_component._f_render();
                                
                                                                                                        }
                                                                                                    },
                                                                                                    {
                                                                                                        s_tag: "button", 
                                                                                                        class: "icon-arrow-down", 
                                                                                                        onpointerdown: async ()=>{
                                                                                                            let n_idx_new = f_n_idx_ensured_inside_array(
                                                                                                                n_idx_a_o_component+1, 
                                                                                                                o_state.o_fragrance.a_o_component.length
                                                                                                            );
                                                                                                            f_swap_in_array(o_state.o_fragrance.a_o_component, n_idx_a_o_component, n_idx_new)
                                                                                                            await o_state.o_js__a_o_component._f_render();
                                
                                                                                                        }
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            {
                                                                                                s_tag: "button",
                                                                                                innerText: "remove", 
                                                                                                onpointerdown: async()=>{
                                                                                                    
                                                                                                    if(o_state.o_fragrance.a_o_component.length == 1){
                                                                                                        return
                                                                                                    }
                                                                                                    let o_component_before = o_state.o_fragrance.a_o_component[f_n_idx_ensured_inside_array(
                                                                                                        n_idx_a_o_component-1, 
                                                                                                        o_state.o_fragrance.a_o_component.length
                                                                                                    )]
                                
                                                                                                    o_state.o_fragrance.a_o_component = o_state?.o_fragrance?.a_o_component.filter(o=>{
                                                                                                        return o!=o_component
                                                                                                    });
                                                                                                    o_component_before.n_nor += o_component.n_nor;
                                                                                                    await o_state.o_js__a_o_component._f_render();
                                                                                                }
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                })) ?? [], 
                                                                                {
                                                                                    s_tag: "button", 
                                                                                    innerText: "add component", 
                                                                                    onpointerdown: async ()=>{
                                                                                        console.log(o_state.o_fragrance)
                                                                                        let n_nor = o_state?.o_fragrance?.a_o_component.at(-1).n_nor/2;
                                
                                                                                        o_state.o_fragrance.a_o_component.at(-1).n_nor = n_nor
                                                                                        
                                                                                        o_state?.o_fragrance?.a_o_component.push(
                                                                                            new O_component(
                                                                                                o_state.a_o_scent[0], 
                                                                                                n_nor
                                                                                            )
                                                                                        )
                                                                                        
                                                                                        await Promise.all([
                                                                                            o_state.o_js__a_o_component._f_render(),
                                                                                            f_timeouttry_update_server_data(),
                                                                                        ])
                                
                                                                                    }
                                                                                }, 
                                
                                             
                                                                                
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        ).o_js__a_o_component,

                                                        {
                                                            style: "display:flex;flex-direction:column; flex:1",
                                                            a_o: [
                                                                {
                                                                    f_after_f_o_html__and_make_renderable: (v_o_html)=>{
                                                                        // console.log({v_o_html})
                                                                        v_o_html.appendChild(o_canvas);
                                                                    },
                                                                    id: "canvas_parent"
                                                                },
                                                                {
                                                                    a_o: [
                                                                        Object.assign(
                                                                            o_state,
                                                                                {
                                                                                    o_js_liquid_grams:{
                                                                                    f_o_jsh:()=>{
                                                                                        return {
                                                                                            a_o: [
                                                                                                {
                                                                                                    innerText: "target liquid (mililiters ml)",
                                                                                                },
                                                                                                {
                                                                                                    s_tag: "input", 
                                                                                                    type:"number", 
                                                                                                    step:1,
                                                                                                    value: o_state.n_ml_target_liquid, 
                                                                                                    oninput: async (o_e)=>{
                                                                                                        let n_grams = parseFloat(o_e.target.value)
                                                                                                        o_state.n_ml_target_liquid = n_grams
                                                        
                                                                                                        await Promise.all([
                                                                                                            o_state.o_js__a_o_component._f_render(),
                                                                                                            o_state.o_js__components._f_render(),
                                                                                                            o_state.o_js__ethanol._f_render(),
                                                                                                            f_timeouttry_update_server_data(),
                                                                                                        ])
                                                                                                    }
                                                                                                },
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        ).o_js_liquid_grams,
                                                                        Object.assign(
                                                                            o_state,
                                                                                {
                                                                                    o_js__components:{
                                                                                    f_o_jsh:()=>{
                                                                                        return {
                                                                                            a_o: [
                                                                                                {
                                                                                                    innerText: "components",
                                                                                                },
                                                                                                {
                                                                                                    s_tag: "input", 
                                                                                                    type:"number", 
                                                                                                    step:0.1,
                                                                                                    value: (1.-o_state.o_fragrance.n_nor_ethanol).toFixed(2),
                                                                                                    oninput:async (o_e)=>{
                                                                                                        let n = parseFloat(o_e.target.value);
                                                                                                        if(n<=0 || isNaN(n)){
                                                                                                            return
                                                                                                        }
                                                                                                        o_state.o_fragrance.n_nor_ethanol = (1.-n)
                                                                                                        await Promise.all([
                                                                                                            o_state.o_js__a_o_component._f_render(),
                                                                                                            o_state.o_js__ethanol._f_render(),
                                                                                                            f_timeouttry_update_server_data(),
                                                                                                        ])
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    innerText: `${(1.-o_state.o_fragrance.n_nor_ethanol)*o_state.n_ml_target_liquid} grams`
                                                                                                },
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        ).o_js__components,
                                                                        Object.assign(
                                                                            o_state,
                                                                                {
                                                                                    o_js__ethanol:{
                                                                                    f_o_jsh:async ()=>{
                                                                                        return {
                                                                                            a_o: [
                                                                                                {
                                                                                                    innerText: "ethanol",
                                                                                                },
                                                                                                {
                                                                                                    s_tag: "input", 
                                                                                                    type:"number", 
                                                                                                    step:0.1,
                                                                                                    value: o_state.o_fragrance.n_nor_ethanol, 
                                                                                                    oninput:async (o_e)=>{
                                                                                                        let n = parseFloat(o_e.target.value);
                                                                                                        if(n<=0 || isNaN(n)){
                                                                                                            return
                                                                                                        }
                                                                                                        o_state.o_fragrance.n_nor_ethanol = n
                                                                                                        await Promise.all([
                                                                                                            o_state.o_js__a_o_component._f_render(),
                                                                                                            o_state.o_js__components._f_render(),
                                                                                                            f_timeouttry_update_server_data(),
                                                                                                        ])
                                                        
                                                                                                        // await o_state.o_js__ethanol._f_render();
                                                                                                    }
                                                                                                },
                                                                                                {
                                                                                                    innerText: `${o_state.o_fragrance.n_nor_ethanol*o_state.n_ml_target_liquid} grams`
                                                                                                },
                                                                                                
                                                                                            ]
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        ).o_js__ethanol,
                                                                    ]
                                                                }
                                                                
                                                            ]
                                                        }

                                                    ]
                                                }
                                                
                                            ]
                              
                                        }
                                    ]
                                }
                            }
                        }
                    }
                ).o_js__viewselection,

            ]
        }
    )
);
// //readme.md:end


let n = 0; 
let n_from_urlhash = parseInt(window.location.hash.slice(1));
if(n_from_urlhash){
    n = n_from_urlhash;
}
let o_fragrance = o_state.a_o_fragrance.find(o=>{
    return o.n_id == n;
})
if(o_fragrance){
    o_state.o_fragrance = o_fragrance
}else{
    o_state.o_fragrance = o_state.a_o_fragrance[0]
    window.location.hash = ''
}
await o_state.o_js__a_o_component._f_render();
await o_state.o_js__nr._f_render();
document.querySelector("#canvas_parent")?.appendChild(o_canvas);

await f_timeouttry_update_server_data();

await f_update_shader();  
f_resize()
