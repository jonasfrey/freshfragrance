
import {
    f_add_css,
    f_s_css_prefixed,
    o_variables, 
    f_s_css_from_o_variables
} from "https://deno.land/x/f_add_css@1.1/mod.js"

import {
    f_o_html__and_make_renderable,
}
from 'https://deno.land/x/f_o_html_from_o_js@2.9/mod.js'


import {
    f_n_idx_binding_from_params,
    f_o_gpu_gateway, 
    f_o_gpu_gateway__from_simple_fragment_shader,
    f_o_gpu_gateway_webgpu,
    f_o_gpu_gateway_webgpu_dataitem__buffer_from_v_as_type,
    f_o_gpu_texture__from_o_web_api_object,
    f_render_o_gpu_gateway,
    f_render_o_gpu_gateway_webgpu,
    f_s_autogenerated_accessor_functions,
    f_s_binding_declaration__from_o_gpu_gateway_webgpu,
    f_update_data_in_o_gpu_gateway,
    f_update_data_in_o_gpu_gateway_webgpu,
}
from 'https://deno.land/x/gpugateway@0.5/mod.js'

import {
    f_n_idx_ensured_inside_array
} from "https://deno.land/x/handyhelpers@4.0.4/mod.js"

import { 
    O_fragrance, 
    O_component,
    O_scent
 } from "./classes.module.js"
import * as o_mod_autogenerated from "../autogenerated.module.js"

o_variables.n_rem_font_size_base = 1. // adjust font size, other variables can also be adapted before adding the css to the dom
o_variables.n_rem_padding_interactive_elements = 0.5; // adjust padding for interactive elements 
f_add_css(
    `
    .bgimg{
        aspect-ratio: 1.618;
        max-width: 10rem;
        width: 10rem;
        min-width: 10rem;
        background-position: center;
        background-size: cover;
        /* color: black; */
        /* outline: white; */
        -webkit-text-stroke-width: 1px;
        -webkit-text-stroke-color: black;
        color:white;
        font-size: 2rem;
        display:flex;
        justify-content:center;
        align-items:center;
    }
    .o_component{
        display:flex;
        flex-direction:row
        justify-content: space-around;
        align-items: center;
    }
    body{
        min-height: 100vh;
        min-width: 100vw;
        /* background: rgba(0,0,0,0.84);*/
        display:flex;
        justify-content:center;
    }
    canvas{
        width: 100%;
        height: 100%;
        position:fixed;
        z-index:-1;
    }
    .app{
        max-width: 1000px;
        width:100%;
        height: 100vh;
        display:flex;
        flex-direction: column;
        justify-content:flex-end;
    }
    ${
        f_s_css_from_o_variables(
            o_variables
        )
    }
    `

);


let o_canvas = document.createElement('canvas');
o_canvas.width = window.innerWidth
o_canvas.height = window.innerHeight


let n_len_a_o_trn = 50;
let n_idx_a_o_trn = 0;
let o_gpu_gateway = f_o_gpu_gateway(
    o_canvas, 
    `#version 300 es
    in vec4 a_o_vec_position_vertex;
    out vec2 o_trn_nor_pixel;
    void main() {
        gl_Position = a_o_vec_position_vertex;
        o_trn_nor_pixel = (a_o_vec_position_vertex.xy) / 2.0; // Convert from clip space to texture coordinates
    }`,
    `#version 300 es
    precision mediump float;
    in vec2 o_trn_nor_pixel;
    out vec4 fragColor;
    uniform float n_ms_time;
    uniform vec2 o_trn_nor_mouse;
    uniform vec2 o_trn_nor_mouse_last;
    uniform vec2 o_trn_nor_mouse_follow;
    uniform vec2 o_scl_canvas;
    uniform vec4 a_o_trn[${n_len_a_o_trn}];
    void main() {
        float nt = n_ms_time *.001;
        vec2 o_trn_nor_p = o_trn_nor_pixel * vec2(1., o_scl_canvas.y/o_scl_canvas.x);
        vec2 o_trn_nor_m = (o_trn_nor_mouse -.5) * vec2(1., o_scl_canvas.y/o_scl_canvas.x);
        vec2 o_trn_nor_ml = (o_trn_nor_mouse_last -.5) * vec2(1., o_scl_canvas.y/o_scl_canvas.x);
        vec2 o_trn_nor_follow = (o_trn_nor_mouse_follow -.5) * vec2(1., o_scl_canvas.y/o_scl_canvas.x);
        vec2 o_trn = (a_o_trn[0].xy -.5) * vec2(1., o_scl_canvas.y/o_scl_canvas.x);
        float n_min = 2.;
        float n_prod = 1.;
        float n_it_min = 0.;
        float n_sum = 0.;
        float n_its = ${n_len_a_o_trn}.;
        for(float n_it = 0.; n_it < n_its; n_it+=1.){
            vec2 oa = a_o_trn[int(n_it)].xy;
            vec2 o_trn = (oa -.5) * vec2(1., o_scl_canvas.y/o_scl_canvas.x);
            float n_it_nor = n_it / n_its;
            float n = length(o_trn_nor_p-o_trn);
            n = pow(abs((n*(20.*n_it_nor+2.)-.5)), 1./10.);
            n_sum+=n;
            n_prod *= (n);
            if(n < n_min){
                n_min = n; 
                n_it_min = n_it;
            }
        }

        float n_len_mouse_delta =  length(o_trn_nor_m-o_trn_nor_ml);
        float n_len_diff_mp = length(o_trn_nor_p-o_trn);
        float n2 = length(o_trn_nor_p-o_trn_nor_follow);
        // float n_freq = n_len_mouse_delta;
        float n_freq = 2.;
        n_len_mouse_delta *= 20.;
        float n_res = n_prod;
        n_len_diff_mp = n_res;

        fragColor = vec4(
            // 1.-vec3(n_res),
            // n_len_mouse_delta,
            // n_prod,
            sin(n_len_diff_mp*n_freq+.5*n_len_mouse_delta+nt),
            sin(n_len_diff_mp*n_freq-.5*n_len_mouse_delta+nt),
            sin(n_len_diff_mp*n_freq+.0+nt),
            1.
        );
    }
    `,
)
var a_o_trn = new Float32Array(new Array(n_len_a_o_trn*4).fill(0));
var buffer = o_gpu_gateway.o_ctx.createBuffer();
o_gpu_gateway.o_ctx.bindBuffer(o_gpu_gateway.o_ctx.ARRAY_BUFFER, buffer);
o_gpu_gateway.o_ctx.bufferData(o_gpu_gateway.o_ctx.ARRAY_BUFFER, a_o_trn, o_gpu_gateway.o_ctx.STATIC_DRAW);
var o_location_a_o_trn = o_gpu_gateway.o_ctx.getUniformLocation(o_gpu_gateway.o_shader__program, 'a_o_trn');
o_gpu_gateway.o_ctx.uniform4fv(o_location_a_o_trn, a_o_trn);


let f_resize = ()=>{
    o_canvas.width = window.innerWidth
    o_canvas.height = window.innerHeight
    f_update_data_in_o_gpu_gateway(
        {o_scl_canvas: [
            o_canvas.width,
            o_canvas.height
        ]}, 
        o_gpu_gateway, 
    )
}
window.addEventListener('resize',()=>{
    f_resize()
});
f_resize()

let n_id_raf = 0;
let f_raf = function(){
    if(n_id_raf%10== 0){
        n_idx_a_o_trn = (n_idx_a_o_trn+1)%(a_o_trn.length/4);
    }


    let o_dir = [
        o_state.o_trn_nor_mouse[0] - o_state.o_trn_nor_mouse_follow[0],
        o_state.o_trn_nor_mouse[1] - o_state.o_trn_nor_mouse_follow[1],
    ];
    let n_t = 0.2;
    o_state.o_trn_nor_mouse_follow = [
        o_state.o_trn_nor_mouse_follow[0] + n_t*o_dir[0],
        o_state.o_trn_nor_mouse_follow[1] + n_t*o_dir[1],
    ]
    f_update_data_in_o_gpu_gateway(
        {
            o_trn_nor_mouse_follow: o_state.o_trn_nor_mouse_follow
        }, 
        o_gpu_gateway, 
    )
    
    a_o_trn[n_idx_a_o_trn*4+0] = o_state.o_trn_nor_mouse_follow[0]
    a_o_trn[n_idx_a_o_trn*4+1] = o_state.o_trn_nor_mouse_follow[1]
    o_gpu_gateway.o_ctx.uniform4fv(o_location_a_o_trn, a_o_trn);
    n_id_raf = window.requestAnimationFrame(f_raf);
    f_update_data_in_o_gpu_gateway(
        {
            n_ms_time: window.performance.now()
        }, 
        o_gpu_gateway, 
    )
    f_render_o_gpu_gateway(
        o_gpu_gateway, 
    );
}
// n_id_raf = window.requestAnimationFrame(f_raf);

// Determine the current domain
const s_hostname = window.location.hostname;

// // Create the WebSocket URL, assuming ws for http and wss for https
// const s_protocol_ws = window.location.protocol === 'https:' ? 'wss:' : 'ws:';
// const s_url_ws = `${s_protocol_ws}//${s_hostname}:${window.location.port}`;

// // Create a new WebSocket instance
// const o_ws = new WebSocket(s_url_ws);

// // Set up event listeners for your WebSocket
// o_ws.onopen = function(o_e) {
//     console.log({
//         o_e, 
//         s: 'o_ws.onopen called'
//     })
// };

// o_ws.onerror = function(o_e) {
//     console.log({
//         o_e, 
//         s: 'o_ws.onerror called'
//     })
// };

// o_ws.onmessage = function(o_e) {
//     console.log({
//         o_e, 
//         s: 'o_ws.onmessage called'
//     })
//     o_state.a_o_msg.push(o_e.data);
//     o_state?.o_js__a_o_mod?._f_render();

// };
// window.addEventListener('pointerdown', (o_e)=>{
//     o_ws.send('pointerdown on client')
// })
// To close the WebSocket
// o_ws.close();

let o_state = {
    n_grams_per_ml_ethanol: .783,
    n_ml_target_liquid: 40,
    n_id_timeout_tmp: 0, 
    s_msg: '', 
    a_o_msg: [], 
    o_trn_nor_mouse_last: [.5,.5],
    o_trn_nor_mouse: [.5,.5], 
    o_trn_nor_mouse_follow: [0.,0.],
    a_o_fragrance: [
        new O_fragrance(
            1, 
            [
                new O_component(
                    o_mod_autogenerated.o_scent__bergamottenminze, 
                    0.5
                ),
                new O_component(
                    o_mod_autogenerated.o_scent__citronella, 
                    0.3
                ),
                new O_component(
                    o_mod_autogenerated.o_scent__fichtennadel, 
                    0.2
                )
            ], 
            0.8
        )
    ],
    a_o_scent: o_mod_autogenerated.a_o_scent,
    a_o_component: [],
    o_scent: {}, 
    o_fragrance: {},
    o_component: {} 
}
window.o_state = o_state

window.addEventListener('pointermove', (o_e)=>{
    o_state.o_trn_nor_mouse = [
        (o_e.clientX / window.innerWidth), 
        1.-(o_e.clientY / window.innerHeight), 
    ];

    f_update_data_in_o_gpu_gateway(
        {
            o_trn_nor_mouse: o_state.o_trn_nor_mouse_last,
            o_trn_nor_mouse_last: o_state.o_trn_nor_mouse, 
        }, 
        o_gpu_gateway, 
    )
    o_state.o_trn_nor_mouse_last = o_state.o_trn_nor_mouse
})


// //readme.md:start
document.body.appendChild(
    await f_o_html__and_make_renderable(
        {
            s_tag: 'div', 
            class: "app",
            a_o: [
                Object.assign(
                    o_state, 
                    {
                        o_js__nr: {
                            f_o_jsh: ()=>{
                                return {
                                    class: "top",
                                    a_o: [
                                        {
                                            s_tag: "h1",
                                            innerText: "NR." 
                                        },
                                        {
                                            s_tag: "input", 
                                            type:"number",
                                            value: o_state?.o_fragrance?.n_id, 
                                            oninput: async (o_e)=>{
                                                let n_id = parseInt(o_e.target.value)
                                                let o_fragrance_existing = o_state.a_o_fragrance.find(
                                                    o=>{
                                                        return o.n_id == n_id
                                                    }
                                                );
                                                if(!o_fragrance_existing){
                                                    o_fragrance_existing = new O_fragrance(
                                                        n_id, 
                                                        [
                                                            new O_component(
                                                                o_mod_autogenerated.o_scent__bergamottenminze, 
                                                                1.0
                                                            )
                                                        ], 
                                                        0.8
                                                    )
                                                    o_state.a_o_fragrance.push(o_fragrance_existing)
                                                    o_state.o_fragrance = o_fragrance_existing
                                                }
                                                console.log(o_state.o_fragrance)
                                                await o_state.o_js__o_fragrance._f_render();
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    }
                ).o_js__nr,

                Object.assign(
                    o_state, 
                    {
                        o_js__o_fragrance: {
                            f_o_jsh: ()=>{
                                return {
                                    class: "a_o_msg",
                                    a_o: [
                                        {
                                            id: "canvas_parent", 
                                        },
                                        {
                                            class: "a_o_component", 
                                            a_o: [
                                                ...(o_state?.o_fragrance?.a_o_component?.map?.((o_component, n_idx_a_o_component)=>{
                                                    return {
                                                        class: 'o_component',
                                                        a_o: [
                                                            Object.assign(
                                                                o_component, 
                                                                {
                                                                    _o_js: {
                                                                        f_o_jsh:()=>{
                                                                            return {
                                                                                s_tag: "input", 
                                                                                type: "number",
                                                                                min: 1, 
                                                                                max: 99,
                                                                                step: 1,
                                                                                value: parseFloat(o_component.n_nor * 100).toFixed(2), 
                                                                                oninput: async (o_e)=>{
                                                                                    console.log(o_e.target.value)
                                                                                    clearTimeout(o_state.n_id_timeout_tmp);
                                                                                    o_state.n_id_timeout_tmp = setTimeout(async ()=>{

                                                                                            let n_nor = parseFloat(o_e.target.value)/100;
                                                                                            if(n_nor <=0 || isNaN(n_nor)){
                                                                                                return
                                                                                            }
                                                                                            if(o_state.o_fragrance.a_o_component.length == 1){
                                                                                                o_component.n_nor = 1
                                                                                                return
                                                                                            }
                                                                                            let o_component_next = o_state.o_fragrance.a_o_component[f_n_idx_ensured_inside_array(
                                                                                                n_idx_a_o_component+1, 
                                                                                                o_state.o_fragrance.a_o_component.length
                                                                                            )]
                                                                                            let n_nor_left = (o_component.n_nor+o_component_next.n_nor)-n_nor;
                                                                                            if(n_nor_left <=0){
                                                                                                return 
                                                                                            }
                                                                                            // let n_nor_left = o_state?.o_fragrance?.a_o_component
                                                                                            //                     .filter(o=>o!=o_component)
                                                                                            //                     .reduce((n_acc, o)=>{return n_acc+o.n_nor}, 0)
                                                                                            //                     -n_nor;
                                                                                            o_component.n_nor = n_nor;
                                                                                            o_component_next.n_nor = n_nor_left
                                                                                            await Promise.all(
                                                                                                o_state?.o_fragrance?.a_o_component.map(o=>{
                                                                                                    if(o!= o_component){
                                                                                                        return o._o_js._f_render()
                                                                                                    }
                                                                                                }
                                                                                            )

                                                                                        );

                                                                                    },100);

                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            )._o_js,
                                                            
                                                            {
                                                                innerText: `%`
                                                            },
                                                            {
                                                                s_tag: 'input', 
                                                                type: 'readonly', 
                                                                value: ((1.-o_state.o_fragrance.n_nor_ethanol)*o_state.n_ml_target_liquid * o_component.n_nor*o_component.o_scent.n_gram_per_ml).toFixed(2)
                                                            },
                                                            {
                                                                innerText: `gram`
                                                                // `${
                                                                //     (1.-o_state.o_fragrance.n_nor_ethanol)*o_state.n_ml_target_liquid * o_component.n_nor
                                                                // } grams`
                                                            },
                                                            {
                                                                s_tag: "select", 
                                                                onchange: async (o_e)=>{
                                                                    let o_scent = o_state.a_o_scent.find(o=>{
                                                                        return o.s_name == o_e.target.value
                                                                    });
                                                                    if(o_scent){
                                                                        o_component.o_scent = o_scent 
                                                                        console.log('asdf')
                                                                        await o_state.o_js__o_fragrance._f_render();
                                                                    }
                                                                },
                                                                a_o: [
                                                                    ...o_state.a_o_scent.map(o_scent=>{

                                                                        return {
                                                                            s_tag: "option", 
                                                                            innerText: o_scent.s_name,
                                                                            value: o_scent.s_name,
                                                                            ...((o_scent.s_name == o_component.o_scent.s_name) ? {
                                                                                selected: true
                                                                            }: {})
                                                                        }
                                                                    })
                                                                ]
                                                            },
                                                            {
                                                                class: "bgimg",
                                                                innerText: o_component.o_scent.s_desc,
                                                                style: [
                                                                    `background-image:url(${o_component.o_scent.a_s_url_img?.[0]})`
                                                                ].join(';')
                                                            },
                                                            {
                                                                s_tag: "button",
                                                                innerText: "remove", 
                                                                onpointerdown: async()=>{
                                                                    
                                                                    if(o_state.o_fragrance.a_o_component.length == 1){
                                                                        return
                                                                    }
                                                                    let o_component_before = o_state.o_fragrance.a_o_component[f_n_idx_ensured_inside_array(
                                                                        n_idx_a_o_component-1, 
                                                                        o_state.o_fragrance.a_o_component.length
                                                                    )]

                                                                    o_state.o_fragrance.a_o_component = o_state?.o_fragrance?.a_o_component.filter(o=>{
                                                                        return o!=o_component
                                                                    });
                                                                    o_component_before.n_nor += o_component.n_nor;
                                                                    await o_state.o_js__o_fragrance._f_render();
                                                                }
                                                            }
                                                        ]
                                                    }
                                                })) ?? [], 
                                                {
                                                    s_tag: "button", 
                                                    innerText: "add component", 
                                                    onpointerdown: async ()=>{
                                                        console.log(o_state.o_fragrance)
                                                        let n_nor = o_state?.o_fragrance?.a_o_component.at(-1).n_nor/2;

                                                        o_state.o_fragrance.a_o_component.at(-1).n_nor = n_nor
                                                        
                                                        o_state?.o_fragrance?.a_o_component.push(
                                                            new O_component(
                                                                o_state.a_o_scent[0], 
                                                                n_nor
                                                            )
                                                        )
                                                        
                                                        await o_state.o_js__o_fragrance._f_render();
                                                    }
                                                }, 

                                            ] 
                                        }, 
                                        
                                    ]
                                }
                            }
                        }
                    }
                ).o_js__o_fragrance,
                Object.assign(
                    o_state,
                        {
                            o_js_liquid_grams:{
                            f_o_jsh:()=>{
                                return {
                                    a_o: [
                                        {
                                            innerText: "target liquid (mililiters ml)",
                                        },
                                        {
                                            s_tag: "input", 
                                            type:"number", 
                                            step:1,
                                            value: o_state.n_ml_target_liquid, 
                                            oninput: async (o_e)=>{
                                                let n_grams = parseFloat(o_e.target.value)
                                                o_state.n_ml_target_liquid = n_grams
                                                await o_state.o_js__o_fragrance._f_render();
                                                await o_state.o_js__components._f_render();
                                                await o_state.o_js__ethanol._f_render();
                                            }
                                        },
                                    ]
                                }
                            }
                        }
                    }
                ).o_js_liquid_grams,
                Object.assign(
                    o_state,
                        {
                            o_js__components:{
                            f_o_jsh:()=>{
                                return {
                                    a_o: [
                                        {
                                            innerText: "components",
                                        },
                                        {
                                            s_tag: "input", 
                                            type:"number", 
                                            step:0.1,
                                            value: (1.-o_state.o_fragrance.n_nor_ethanol).toFixed(2),
                                            oninput:async (o_e)=>{
                                                let n = parseFloat(o_e.target.value);
                                                if(n<=0 || isNaN(n)){
                                                    return
                                                }
                                                o_state.o_fragrance.n_nor_ethanol = (1.-n)
                                                await o_state.o_js__o_fragrance._f_render();
                                                // await o_state.o_js__components._f_render();
                                                await o_state.o_js__ethanol._f_render();
                                            }
                                        },
                                        {
                                            innerText: `${(1.-o_state.o_fragrance.n_nor_ethanol)*o_state.n_ml_target_liquid} grams`
                                        },
                                    ]
                                }
                            }
                        }
                    }
                ).o_js__components,
                Object.assign(
                    o_state,
                        {
                            o_js__ethanol:{
                            f_o_jsh:()=>{
                                return {
                                    a_o: [
                                        {
                                            innerText: "ethanol",
                                        },
                                        {
                                            s_tag: "input", 
                                            type:"number", 
                                            step:0.1,
                                            value: o_state.o_fragrance.n_nor_ethanol, 
                                            oninput:async (o_e)=>{
                                                let n = parseFloat(o_e.target.value);
                                                if(n<=0 || isNaN(n)){
                                                    return
                                                }
                                                o_state.o_fragrance.n_nor_ethanol = n
                                                await o_state.o_js__o_fragrance._f_render();
                                                await o_state.o_js__components._f_render();
                                                // await o_state.o_js__ethanol._f_render();
                                            }
                                        },
                                        {
                                            innerText: `${o_state.o_fragrance.n_nor_ethanol*o_state.n_ml_target_liquid} grams`
                                        },
                                    ]
                                }
                            }
                        }
                    }
                ).o_js__ethanol,
            ]
        }
    )
);
// //readme.md:end
document.querySelector("#canvas_parent")?.appendChild(o_canvas);

o_state.o_fragrance = o_state.a_o_fragrance[0];
await o_state.o_js__o_fragrance._f_render();
await o_state.o_js__nr._f_render();